//
//  CheckoutViewController.swift
//  smartPOS
//
//  Created by I Am Focused on 18/04/2021.
//  Copyright (c) 2021 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CheckoutDisplayLogic: class {
    func displayFetchedMenuItems(viewModel: ListMenuItems.FetchMenuItems.ViewModel)
}

class CheckoutViewController: UIViewController, CheckoutDisplayLogic {
  var interactor: CheckoutBusinessLogic?
  var router: (NSObjectProtocol & CheckoutRoutingLogic & CheckoutDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = CheckoutInteractor()
    let presenter = CheckoutPresenter()
    let router = CheckoutRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    fetchMenuItems()
  }
    
  
}
// MARK: Handle Fetch List MenuItems
extension CheckoutViewController {
    //@IBOutlet weak var nameTextField: UITextField!
    
    func fetchMenuItems() {
        let request = ListMenuItems.FetchMenuItems.Request()
      interactor?.fetchMenuItems(request: request)
    }
    
    func displayFetchedMenuItems(viewModel: ListMenuItems.FetchMenuItems.ViewModel) {
      //nameTextField.text = viewModel.name
      print("displayFetchedMenuItems\(viewModel.displayedMenuItems)")
    }

}
