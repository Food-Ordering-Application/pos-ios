//
//  OrdersPageViewController.swift
//  smartPOS
//
//  Created by I Am Focused on 17/04/2021.
//  Copyright (c) 2021 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol OrdersPageDisplayLogic: class {
    func displayOrders(viewModel: OrdersPage.FetchOrders.ViewModel)
    func displaySearchOrders(viewModel: OrdersPage.SearchOrders.ViewModel)
    func displayOrdersByStatus(viewModel: OrdersPage.FetchOrdersByStatus.ViewModel)
    func displayRefreshedOrders(viewModel: OrdersPage.RefreshOrders.ViewModel)
}

class OrdersPageViewController: UIViewController, OrdersPageDisplayLogic {
    var interactor: OrdersPageBusinessLogic?
    var router: (NSObjectProtocol & OrdersPageRoutingLogic & OrdersPageDataPassing)?
    
    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = OrdersPageInteractor()
        let presenter = OrdersPagePresenter()
        let router = OrdersPageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
    // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }
  
    // MARK: Do something
  
    // @IBOutlet weak var nameTextField: UITextField!
  
    func doSomething() {
        let request = OrdersPage.FetchOrders.Request()
        interactor?.fetchOrders(request: request)
    }
  
    func displayOrders(viewModel: OrdersPage.FetchOrders.ViewModel) {
        // nameTextField.text = viewModel.name
        print("displayOrders")
    }
    func displaySearchOrders(viewModel: OrdersPage.SearchOrders.ViewModel) {
        print("displaySearchOrders")
    }
    func displayOrdersByStatus(viewModel: OrdersPage.FetchOrdersByStatus.ViewModel) {
        print("displayOrdersByStatus")
    }
    
    func displayRefreshedOrders(viewModel: OrdersPage.RefreshOrders.ViewModel) {
        print("displayRefreshedOrders")
    }
    
   
}
