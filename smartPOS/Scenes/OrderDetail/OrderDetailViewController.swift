//
//  OrderDetailViewController.swift
//  smartPOS
//
//  Created by I Am Focused on 18/04/2021.
//  Copyright (c) 2021 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import EmptyDataSet_Swift

protocol OrderDetailDisplayLogic: class {
    func displayOrder(viewModel: OrderDetail.GetOrder.ViewModel)
}

class OrderDetailViewController: UIViewController, OrderDetailDisplayLogic,   EmptyDataSetSource, EmptyDataSetDelegate  {
    var interactor: OrderDetailBusinessLogic?
    var router: (NSObjectProtocol & OrderDetailRoutingLogic & OrderDetailDataPassing)?

    @IBOutlet var orderItemsTableView: UITableView!
    @IBOutlet var btnAccept: UIButton!
    @IBOutlet var btnReject: UIButton!
    
    @IBOutlet weak var statusAreaView: UIView!
    @IBOutlet weak var addressAreaView: UIView!
    @IBOutlet weak var noteAreaView: UIView!
    @IBOutlet weak var timeAreaView: UIView!
    @IBOutlet weak var paymentAreaView: UIView!

    @IBOutlet weak var lbOrderId: UILabel!
    
    var orderItems: [OrderItem] = []
 
    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupLayout()
        self.setupButton()
        self.setupTableView()
//        self.getOrder(for: "ORDER-009")
    }
  
    override func viewDidAppear(_ animated: Bool) {
        self.setupLayout()
    }
    
   
}
// MARK: Display order

extension OrderDetailViewController {
    // MARK: Do something
   
  
    func getOrder(for id: String) {
        let request = OrderDetail.GetOrder.Request(id: id)
        self.interactor?.getOrder(request: request)
    }
  
    func displayOrder(viewModel: OrderDetail.GetOrder.ViewModel) {
        // nameTextField.text = viewModel.name
        view.hideSkeleton()
        setupOrderDisplay(viewModel: viewModel)
        print("displayOrder\(viewModel)")
    }
    
    
    private func setupOrderDisplay(viewModel: OrderDetail.GetOrder.ViewModel) {
        guard viewModel.error == nil else {
            Alert.showUnableToRetrieveDataAlert(on: self)
            return
        }
        let order = viewModel.displayedOrder
        self.lbOrderId!.text = order.id
    }
}

// MARK : Setup Notification to receive data from Another View Controller

extension OrderDetailViewController {
    func setupNotification() {
        NotificationCenter.default.addObserver(self, selector: #selector(didGetNotificationOrderDetail(_:)), name: Notification.Name("OrderDetail"), object: nil)
    }
    
    @objc func didGetNotificationOrderDetail(_ notification: Notification) {
        let orderId = notification.object as! String?
        print("didGetNotificationOrderDetail-\(String(describing: orderId))")
        self.getOrder(for: orderId!)
    }
}



// MARK: Setting DataSorce And Delegate for TableView

extension OrderDetailViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return OrderItemTableViewCell.height()
    }

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        if let menu = LeftMenu(rawValue: indexPath.row) {
//            self.changeViewController(menu)
//        }
    }

    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        if self.orderItemsTableView == scrollView {}
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.orderItems.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: OrderItemTableViewCell.identifier, for: indexPath) as? OrderItemTableViewCell else { fatalError("xib doesn't exist") }
        cell.setData(self.orderItems[indexPath.row])
        // Highlighted color
        let myCustomSelectionColorView = UIView()
        myCustomSelectionColorView.backgroundColor = #colorLiteral(red: 0.9333369732, green: 0.4588472247, blue: 0.2666652799, alpha: 0.161368649)
        myCustomSelectionColorView.layer.cornerRadius = 8
        cell.selectedBackgroundView = myCustomSelectionColorView
        return cell
    }
}

// MARK: Style Button

extension OrderDetailViewController {
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = OrderDetailInteractor()
        let presenter = OrderDetailPresenter()
        let router = OrderDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
        setupNotification()
    }
    
    func setupButton() {
        self.btnReject.layer.borderWidth = 1
        self.btnReject.layer.borderColor = #colorLiteral(red: 0.8506677372, green: 0.2256608047, blue: 0.1839731823, alpha: 1)
        self.btnReject.layer.cornerRadius = 8
        self.btnReject.layer.shadowPath = UIBezierPath(rect: self.btnReject.bounds).cgPath
    }
    
    func setupLayout() {
        self.view.layer.borderWidth = 1
        self.view.layer.borderColor = #colorLiteral(red: 0.9333369732, green: 0.4588472247, blue: 0.2666652799, alpha: 1)
        self.view.layer.cornerRadius = 15
        self.view.layer.shadowPath = UIBezierPath(rect: self.view.bounds).cgPath
//        self.view.layer.maskedCorners = [.layerMinXMaxYCorner, .layerMinXMinYCorner]
//        self.view.backgroundColor = UIColor.gray.withAlphaComponent(0.1)
    }
    
    // MARK: Register tableView for xib cell

    func setupTableView() {
        self.orderItemsTableView.separatorStyle = .none
        self.orderItemsTableView.register(OrderItemTableViewCell.nib, forCellReuseIdentifier: OrderItemTableViewCell.identifier)
        self.orderItemsTableView.emptyDataSetView { [weak self] view in
            if let `self` = self {
                view.titleLabelString(NSAttributedString(string: "Empty"))
            }
        }
    }
}
